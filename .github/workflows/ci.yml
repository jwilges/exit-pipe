name: CI
on: [push, pull_request]
jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.8']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install CI dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox~=3.14.3 tox-venv~=0.4.0
    - name: Run lint
      run: tox -e pylint
  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.6', '3.7', '3.8']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install CI dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox~=3.14.3 tox-venv~=0.4.0
    - name: Run tests
      run: tox -e coverage-xml -- --junitxml="test-reports/junit-${{ matrix.python-version }}.xml"
    - name: Upload test results artifact
      uses: actions/upload-artifact@master
      with:
        name: test-results-${{ matrix.python-version }}
        path: test-reports/junit-${{ matrix.python-version }}.xml
      if: always()
    - name: Upload coverage results artifact
      uses: actions/upload-artifact@master
      with:
        name: coverage-${{ matrix.python-version }}
        path: coverage.xml
      if: always()
  coverage:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.8']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install CI dependencies
      run: |
        python -m pip install --upgrade pip
        pip install codecov~=2.0.15
    - uses: actions/download-artifact@v1
      with:
        name: coverage-${{ matrix.python-version }}
        path: coverage.xml
    - name: Upload coverage results to CodeCov
      run: codecov -t ${{ secrets.CODECOV_TOKEN }}
